// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Department {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  positions Position[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Position {
  id           Int        @id @default(autoincrement())
  title        String
  department   Department @relation(fields: [departmentId], references: [id])
  departmentId Int
  minSalary    Int
  maxSalary    Int
  employees    Employee[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([title, departmentId])
  @@index([departmentId])
}

model Employee {
  id            Int      @id @default(autoincrement())
  firstName     String
  lastName      String
  email         String   @unique
  mobileNumber  String
  pictureUrl    String?
  monthlySalary Int
  positionId    Int
  position      Position @relation(fields: [positionId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  address       Address?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([positionId])
}

model Address {
  id          Int      @id @default(autoincrement())
  street      String
  area        String
  region      String
  city        String
  postalCode  String?
  description String?
  employeeId  Int      @unique
  employee    Employee @relation(fields: [employeeId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
